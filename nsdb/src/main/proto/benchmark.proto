//
// Copyright 2016 Midokura SARL
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

/**
+---------+
|Connected|Send register
+---------+
    |ack
+---v-----+
|Waiting  |
+---------+
+-> |bootstrap
|   v
+---+-----+
|Ready    |Send ack
+-------+-+
|       ^
| Start |Stop
v       |
+-------+-+
| Running |Send ack
+---------+Send data
*/

package org.midonet.benchmark;

option java_package = "org.midonet.benchmark";
option java_outer_classname = "Protocol";

message Register {
}

message Unregister {
    optional string reason = 1;
}

message Bootstrap {
    required uint64 session_id = 1;
    optional string controller = 2;
    repeated string zookeeper_servers = 3;
    repeated string cluster_servers = 4;
    optional uint32 duration = 5;
    optional string table = 6;
    optional uint32 table_count = 7;
    optional uint32 entry_count = 8;
    optional uint32 write_rate = 9;
    optional string dump_file = 10;
    optional string dbUrl = 11;
    optional string dbUser = 12;
    optional string dbPassword = 13;
    optional string dbName = 14;
}

message Acknowledge {
}

message Error {
    optional string reason = 1;
}

message Start {
    required uint64 session_id = 1;
}

message Stop {
    required uint64 session_id = 1;
}

message Terminate {
    optional Error error = 1;
}

message Data {
    required uint64 session_id = 1;
    optional bytes data = 2;
}

message WorkerMessage {
    required uint64 request_id = 1;
    oneof content {
        Register register = 2;
        Unregister unregister = 3;
        Acknowledge acknowledge = 4;
        Error error = 5;
        Data data = 6;
        Stop stop = 7;
    }
}

message ControllerMessage {
    required uint64 request_id = 1;
    oneof content {
        Acknowledge acknowledge = 2;
        Bootstrap bootstrap = 4;
        Start start = 5;
        Stop stop = 6;
        Terminate terminate = 7;
    }
}
